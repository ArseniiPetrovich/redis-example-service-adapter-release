---
name: redis-on-demand-broker

director_uuid: <DIRECTOR_UUID>

releases:
  - name: &broker-release on-demand-service-broker
    version: latest
  - name: &service-adapter-release redis-example-service-adapter
    version: latest

stemcells:
  - alias: trusty
    os: ubuntu-trusty
    version: <STEMCELL_VERSION>

instance_groups:
  - name: broker
    instances: 1
    jobs:
      - name: broker
        release: *broker-release
        properties:
          port: &broker_port 8080
         username: <BROKER_BASIC_AUTH_USERNAME>
          password: <BROKER BASIC AUTH PASSWORD>
          disable_ssl_cert_verification: <true | false> # optional
          cf:
            url: <CF_API_URL>
            root_ca_cert: <root ca cert for CF> # optional
            authentication:
              url: <CF_UAA_URL>
              user_credentials: # can use client_credentials instead
                username: <CF_ADMIN_USER>
                password: <CF_ADMIN_PASSWORD>
          bosh:
            url: <BOSH_URL>
            authentication:
              basic: # can use uaa instead
                username: <BOSH_DIRECTOR_BASIC_AUTH_USERNAME>
                password: <BOSH_DIRECTOR_BASIC_AUTH_USERNAME>
          service_adapter:
            path: /var/vcap/packages/service-adapter/bin/service-adapter
          service_deployment:
            releases:
              - name: redis-service
                version: <REDIS_SERVICE_VERSION>
                jobs:
                - redis-server
                - health-check # optional post-deploy lifecycle errand
                - cleanup-data # optional pre-delete lifecycle errand
            stemcell:
              os: ubuntu-trusty
              version: <STEMCELL_VERSION>
          service_catalog:
            id: B07E8B68-601C-440A-8F15-E263D29998AA
            service_name: redis-on-demand
            service_description: Redis Dedicated Instance
            bindable: true
            plan_updatable: true
            metadata:
              display_name: Redis
            tags:
              - redis
              - pivotal
            plans:
              - name: dedicated-vm
                plan_id: 69E93C94-1DE0-445D-A80E-888B7505E1C1
                description: Redis Dedicated Instance
                metadata:
                  display_name: Redis Dedicated Instance
                  bullets: []
                quotas: # optional
                  service_instance_limit: 10
                properties:
                  persistence: <TRUE | FALSE> # attach a persistent disk below if true
                lifecycle_errands:
                  post_deploy: health-check # optional post-deploy lifecycle errand
                  pre_delete: cleanup-data # optional pre-delete lifecycle errand
                instance_groups:
                  - name: redis-server
                    vm_type: <FROM_CLOUD_CONFIG>
                    persistent_disk: <FROM_CLOUD_CONFIG> # only if persistence is true in plan properties
                    instances: 1
                    networks: [<FROM_CLOUD_CONFIG>]
                    azs: [<FROM_CLOUD_CONFIG>]
                  - name: health-check # optional post-deploy lifecycle errand
                    lifecycle: errand
                    vm_type: <FROM_CLOUD_CONFIG>
                    instances: 1
                    networks: [<FROM_CLOUD_CONFIG>]
                    azs: [<FROM_CLOUD_CONFIG>]
                  - name: cleanup-data # optional pre-delete lifecycle errand
                    lifecycle: errand
                    vm_type: <FROM_CLOUD_CONFIG>
                    instances: 1
                    networks: [<FROM_CLOUD_CONFIG>]
                    azs: [<FROM_CLOUD_CONFIG>]

      - name: service-adapter
        release: *service-adapter-release

    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

  - name: register-broker
    lifecycle: errand
    instances: 1
    jobs:
      - name: register-broker
        release: *broker-release
        properties:
          broker_name: &broker_name redis-on-demand
          disable_ssl_cert_verification: <true | false>
          cf: &cf
            api_url: <CF_API_URL>
            admin_username: <CF_ADMIN_USERNAME>
            admin_password: <CF_ADMIN_PASSWORD>
    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

  - name: deregister-broker
    lifecycle: errand
    instances: 1
    jobs:
      - name: deregister-broker
        release: *broker-release
        properties:
          broker_name: *broker_name
          disable_ssl_cert_verification: *disable_ssl_cert_verification
          cf:
            <<: *cf
    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

  - name: delete-all-service-instances
    lifecycle: errand
    instances: 1
    jobs:
      - name: delete-all-service-instances
        release: *broker-release
    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

  - name: upgrade-all-service-instances
    lifecycle: errand
    instances: 1
    jobs:
      - name: upgrade-all-service-instances
        release: *broker-release
    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

  - name: orphan-deployments
    lifecycle: errand
    instances: 1
    jobs:
      - name: orphan-deployments
        release: *broker-release
    vm_type: <FROM_CLOUD_CONFIG>
    stemcell: trusty
    networks: [{name: <FROM_CLOUD_CONFIG>}]
    azs: [<FROM_CLOUD_CONFIG>]

update:
  canaries: 1
  canary_watch_time: 3000-180000
  update_watch_time: 3000-180000
  max_in_flight: 4
